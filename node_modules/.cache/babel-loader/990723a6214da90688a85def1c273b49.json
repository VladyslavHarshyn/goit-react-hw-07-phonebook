{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-phonebook/src/App.jsx\";\nimport { nanoid } from \"nanoid\";\nimport { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Form from \"./components/Form/Form\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: \"\"\n    };\n\n    this.addContact = _ref => {\n      let {\n        name,\n        number\n      } = _ref;\n      const {\n        contacts\n      } = this.state;\n\n      if (contacts.find(el => el.name === name)) {\n        alert(`${name} is already in contacts`);\n      } else {\n        this.setState(_ref2 => {\n          let {\n            contacts\n          } = _ref2;\n          const user = {\n            name,\n            number,\n            id: nanoid()\n          };\n          return {\n            contacts: [...contacts, user]\n          };\n        });\n      }\n    };\n\n    this.removeContact = id => {\n      this.setState(_ref3 => {\n        let {\n          contacts\n        } = _ref3;\n        return {\n          contacts: contacts.filter(item => item.id !== id)\n        };\n      });\n    };\n\n    this.getFilteredConatcts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n\n      if (!filter) {\n        return contacts;\n      }\n\n      const filterValue = filter.toLowerCase();\n      const filteredContacts = contacts.filter(_ref4 => {\n        let {\n          name\n        } = _ref4;\n        const nameValue = name.toLowerCase();\n        return nameValue.includes(filterValue);\n      });\n      return filteredContacts;\n    };\n\n    this.handleFilter = _ref5 => {\n      let {\n        target\n      } = _ref5;\n      this.setState({\n        filter: target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const ContactsParse = JSON.parse(localStorage.getItem(\"users\"));\n    console.log(ContactsParse);\n\n    if (ContactsParse) {\n      this.setState({\n        contacts: ContactsParse\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"users\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Phonebook\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Contacts\",\n        children: /*#__PURE__*/_jsxDEV(Contacts, {\n          removeContact: this.removeContact,\n          getFilteredConatcts: this.getFilteredConatcts(),\n          handleFilter: this.handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vladyslavharshyn/Documents/GitHub/goit-react-hw-03-phonebook/src/App.jsx"],"names":["nanoid","Component","Section","Form","Contacts","App","state","contacts","filter","addContact","name","number","find","el","alert","setState","user","id","removeContact","item","getFilteredConatcts","filterValue","toLowerCase","filteredContacts","nameValue","includes","handleFilter","target","value","componentDidMount","ContactsParse","JSON","parse","localStorage","getItem","console","log","componentDidUpdate","prevState","setItem","stringify","render"],"mappings":"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","sourcesContent":["import { nanoid } from \"nanoid\";\nimport { Component } from \"react\";\n\nimport Section from \"./components/Section/Section\";\nimport Form from \"./components/Form/Form\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const ContactsParse = JSON.parse(localStorage.getItem(\"users\"));\n    console.log(ContactsParse);\n    if (ContactsParse) {\n      this.setState({ contacts: ContactsParse });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"users\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    if (contacts.find((el) => el.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => {\n        const user = {\n          name,\n          number,\n          id: nanoid(),\n        };\n        return {\n          contacts: [...contacts, user],\n        };\n      });\n    }\n  };\n\n  removeContact = (id) => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: contacts.filter((item) => item.id !== id),\n      };\n    });\n  };\n\n  getFilteredConatcts = () => {\n    const { filter, contacts } = this.state;\n\n    if (!filter) {\n      return contacts;\n    }\n    const filterValue = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) => {\n      const nameValue = name.toLowerCase();\n      return nameValue.includes(filterValue);\n    });\n\n    return filteredContacts;\n  };\n\n  handleFilter = ({ target }) => {\n    this.setState({\n      filter: target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title={\"Phonebook\"}>\n          <Form onSubmit={this.addContact} />\n        </Section>\n        <Section title={\"Contacts\"}>\n          <Contacts\n            removeContact={this.removeContact}\n            getFilteredConatcts={this.getFilteredConatcts()}\n            handleFilter={this.handleFilter}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}